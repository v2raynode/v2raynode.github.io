<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raynode.github.io/news/article-22290.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</title>
    <link rel="icon" href="/assets/website/img/v2raynode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="在python中连接hive和impala有很多中方式，有pyhive,impyla,pyspark,ibis等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerber" />
    
    <meta name="author" content="V2rayNode节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raynode.github.io/news/article-22290.htm" />
    <meta property="og:site_name" content="V2rayNode节点分享站" />
    <meta property="og:title" content="在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala" />
    <meta property="og:image" content="https://v2raynode.github.io/uploads/20240303/36705f9b9b8cafc8cb3da78c9c71f6d5.webp" />
        <meta property="og:release_date" content="2024-12-07T10:21:17" />
    <meta property="og:updated_time" content="2024-12-07T10:21:17" />
        <meta property="og:description" content="在python中连接hive和impala有很多中方式，有pyhive,impyla,pyspark,ibis等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerber" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KDKFWTWW0S"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KDKFWTWW0S');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand d-flex align-items-center" href="/">
                                    <span>V2ray Node</span>
                                </a>

                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">在Python中使用ibis,impyla,pyhive,pyspark连接Kerberos安全认证的Hive、Impala</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>在python中连接hive和impala有很多中方式，有<strong>pyhive,impyla,pyspark,ibis</strong>等等，本篇我们就逐一介绍如何使用这些包连接hive或impala，以及如何通过kerberos认证。</p> </h1> <p>如果集群没开启kerberos认证则不需要这里的代码，或者在系统环境内通过kinit命令认证也不需要这部分的代码。</p> <p><strong>krbcontext.context_shell</strong></p> <pre><code class="language-python"># -*- coding: utf-8 -*-  __all__ = [ 'krbcontext', 'KRB5KinitError', ]  import os, sys # import pwd import subprocess   from contextlib import contextmanager  class KRB5KinitError(Exception):     pass  # def get_login(): #     ''' Get current effective user name ''' # #     return pwd.getpwuid(os.getuid()).pw_name  def init_ccache_as_regular_user(principal=None, ccache_file=None):     '''Initialize credential cache as a regular user      Return the filename of newly initialized credential cache     '''      if not sys.stdin.isatty():         raise IOError('This is not running on console. So, you need to run kinit '                       'with your principal manually before anything goes.')      cmd = 'kinit %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = '-c %s' % ccache_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file    def init_ccache_with_keytab(principal, keytab_file, ccache_file):     '''Initialize credential cache using keytab file      Return the filename of newly initialized credential cache     '''     cmd = 'kinit -kt %(keytab_file)s -c %(ccache_file)s %(principal)s'     args = {}      args['principal'] = principal     args['ccache_file'] = ccache_file     args['keytab_file'] = keytab_file      kinit_proc = subprocess.Popen(         (cmd % args).split(),         stderr=subprocess.PIPE)     stdout_data, stderr_data = kinit_proc.communicate()      if kinit_proc.returncode &gt; 0:         raise KRB5KinitError(stderr_data)      return ccache_file   @contextmanager def krbcontext(using_keytab=False, **kwargs):     '''A context manager for Kerberos-related actions      using_keytab: specify to use Keytab file in Kerberos context if True,                   or be as a regular user.     kwargs: contains the necessary arguments used in kerberos context.             It can contain principal, keytab_file, ccache_file.             When you want to use Keytab file, keytab_file must be included.     '''      env_name = 'KRB5CCNAME'     old_ccache = os.getenv(env_name)     if using_keytab:         ccache_file = init_ccache_with_keytab(**kwargs)     else:         ccache_file = init_ccache_as_regular_user(kwargs.get("principal"), kwargs.get("ccache_file"))     os.environ[env_name] = ccache_file     yield </code></pre> </h1> <p>使用pyhive连接hive</p> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.3.0  # 如果使用ibis或impyla需要thrift_sasl==0.2.1  thrift==0.13.0  thriftpy==0.3.5  """  from pyhive import sqlalchemy_hive,hive from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>两种方式，一种是在系统环境内让当前用户通过kinit 先保持kerberos的认证，那所有的代码里就无需再写kerberos认证代码了。另一种方式，在python脚本内使用下面的代码进入kerberos认证会话：</p> <pre><code class="language-python">config = {     "kerberos_principal": "hive@CSDNTEST.COM.LOCAL",     "keytab_file": '/home/tools/wyk/keytab/hive.keytab',       "kerberos_ccache_file": '/home/tools/wyk/keytab/hive_ccache_uid',     "AUTH_MECHANISM": "GSSAPI" } with krbcontext(using_keytab=True,                                principal=config['kerberos_principal'],                                keytab_file=config['keytab_file'],                                ccache_file=config['kerberos_ccache_file']):     #在这个代码块内执行的脚本都是在kerberos认证内的。     #可在此代码块内查询hdfs hive hbase等等只要是kerberos principal有权限的组件都可以</code></pre> <h3>使用</h3> <p>下面的代码需要在上面的kerberos代码块内才能通过kerberos认证，如果集群没有开启kerberos认证或当期系统已使用kinit进行了认证则无需上面的代码：</p> <pre><code>con = hive.connect(host='uatnd02.csdntest.com.local',port=10000,auth='KERBEROS',kerberos_service_name="hive") #host为hiveserver2所在节点，port默认10000，为hs2的端口     cursor = con.cursor()     cursor.execute('select * from dl_nccp.account limit 5') #不能有分号！     # cursor.execute('desc dl_nccp.account') #不能有分号！     datas = cursor.fetchall()     print(datas)     cursor.close()     con.close()</code></pre> <p>&nbsp;</p> </h1> <h3>环境</h3> <pre><code class="language-python"> """  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """  from impala.dbapi import connect from krbcontext.context_shell import krbcontext</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <pre><code class="language-python">#impyla  thrift==0.2.1  与ibis依赖版本相同，可同时使用     conn = connect(host='uatnd02.csdntest.com.local', port=10000, auth_mechanism='GSSAPI',kerberos_service_name='hive')     cur = conn.cursor()     cur.execute('SHOW databases') #不能有分号     cur.table_exists(table_name='account',database_name='dl_nccp') #return True or False     cur.ping() #return True or False     cur.status() #return True or False     cur.get_table_schema(table_name='account',database_name='dl_nccp') #return 表结构 类似desc     print(cur.fetchall())     cur.close()     conn.close()</code></pre> <p><img fetchpriority="high" decoding="async" alt="" height="271" src="http://img.555519.xyz/uploads/20221228/72a862ca43641590666eaeb2a04e5bc8.jpg"></p> </h1> <p>ibis是个很强大的第三方环境包，支持对各类数据库或文件系统进行访问，功能强大，并返回pandas dataframe格式，对数据开发人员很友好，这个包我用了两年多，非常<strong><span style="color:#86ca5e;">推荐</span></strong>。</p> <p>官方文档：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.ibis-project.org/getting-started.html"  rel="nofollow">https://docs.ibis-project.org/getting-started.html</a></p> <h3>环境</h3> <pre><code class="language-python"> """  ibis-framework==0.14.0  #pip install ibis-framework[impala]==0.14.0  decorator==4.4.2  future==0.18.2  gssapi==1.6.5  krbcontext==0.10  PyHive==0.5.0  impyla==0.14.1  sasl==0.2.1  six==1.11.0  thrift_sasl==0.2.1  # 只有这个与pyhive的不一样  thrift==0.13.0  thriftpy==0.3.5  """</code></pre> <h3>Kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>官方文档以及源码里还有很多函数可供使用，这里仅列出常用的一些，建议使用ibis包的可以看看源码或官方文档。</p> <pre><code class="language-python">import ibis import pandas as pd import ibis.expr.datatypes as dt conf={ "impala_host":"uathd01.csdntest.com.local", "impala_port":21050, "kerberos_service_name":"impala", "auth_mechanism":"GSSAPI", "webhdfs_host1":"uatnd01.csdntest.com.local", "webhdfs_host2":"uatnd02.csdntest.com.local", "webhdfs_port":9870   #如果是hadoop3之前的版本这里的参数改为50070 } #获取hdfs连接 try:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host2"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)     hdfs_client.ls('/') except:     hdfs_client = ibis.hdfs_connect(host = conf["webhdfs_host1"], port = conf["webhdfs_port"], auth_mechanism = conf["auth_mechanism"], use_https = False, verify = False)  #获取impala连接 impala_client = ibis.impala.connect(host=conf["impala_host"], port=conf["impala_port"], hdfs_client = hdfs_client, auth_mechanism=conf["auth_mechanism"], timeout = 300)  # 直接读表，select * from dh_sales.r_order limit 10，返回pandas dataframe res = impala_client.table('r_order', database='dh_sales').execute(limit=10) print(type(res)) print(res.dtypes) print(res)  #使用SQL查询impala res = impala_client.sql("""select area,is_oversea,dw_ins_ts,sum(gid_cnt) from dh_t3_report_crm.r_duration_area_metr where is_oversea=0 group by 1,2,3 limit 5""") df_res = res.execute() print(df_res)  #列库下所有表 impala_client.list_tables(database='dl_common')  #使用pandas dataframe建表，类型自动映射 impala_client.create_table(table_name='ibis_create0602',obj=sys_dict,database='default',force=True) ... #pd_res_acc 略 #pd_res_cre 略 ... #使用pandas datraframe插入数据 impala_client.insert(table_name='tmp_account',obj=pd_res_acc,database='default',overwrite=True) impala_client.insert(table_name='ibis_create',obj=pd_res_cre,database='default',overwrite=True)</code></pre> <p><img decoding="async" alt="" height="681" src="http://img.555519.xyz/uploads/20221228/761baff5d40daf80716316d5edd6721b.jpg"></p> <p><img decoding="async" alt="" height="90" src="http://img.555519.xyz/uploads/20221228/8cfa2f3a8afd6e8b8e4a18beb8c0fd48.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="39" src="http://img.555519.xyz/uploads/20221228/4e022e96eaee72cb7f3327df0a74f6b7.jpg"></p> <h3>BUG解决</h3> <p>执行insert或create命令可能会报下面的错误，这个是源码级别的BUG，参考下面的连接修改源码即可解决：</p> <pre><code>UnicodeEncodeError: 'latin-1' codec can't encode characters in position 160-161: ordinal not in range(256)</code></pre> <p><img loading="lazy" decoding="async" alt="" height="710" src="http://img.555519.xyz/uploads/20221228/efb3d6edd2e109e83b51df5bceb810d1.jpg"></p> <p>参考：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/ibis-project/ibis/issues/2120"  rel="nofollow">https://github.com/ibis-project/ibis/issues/2120</a></p> <p><span style="color:#86ca5e;"><em>vim&nbsp;/home/tools/python3/<strong>Python-3.6.8/lib/python3.6/site-packages/hdfs/client.py&nbsp;</strong></em></span></p> <p><img loading="lazy" decoding="async" alt="" height="169" src="http://img.555519.xyz/uploads/20221228/cc08cf49f942f6b0f83acacb6c82ea30.jpg"></p> </h1> <h3>环境</h3> <p><span style="color:#86ca5e;"><em>vim /etc/profile</em></span></p> <pre><code>export SPARK_HOME=/opt/cloudera/parcels/CDH/lib/spark export SPARK_CONF_DIR=$SPARK_HOME/conf export PYTHONPATH=/home/tools/anaconda3/envs/csdn/bin export PYSPARK_PYTHON=/home/tools/anaconda3/envs/csdn/bin/python3.6</code></pre> <pre><code class="language-python">""" pyspark==2.4.5 """</code></pre> <h3>kerberos认证</h3> <p>与上面的pyhive一样，略</p> <h3>使用</h3> <p>使用pyspark连接hive进行查询，并将spark dataframe转为pandas dataframe：</p> <pre><code class="language-python">from __future__ import division #import findspark as fs #fs.init() import pandas as pd from pyspark.sql import HiveContext,SparkSession,SQLContext from pyspark import SparkContext, SparkConf import pyspark.sql.functions as F import datetime as dt from datetime import datetime import random import numpy as np from log3 import log_to_file, log from pyspark.sql.types import *  conf = SparkConf().setMaster("yarn").setAppName("MF_return_calc") sc = SparkContext(conf=conf) sc.setLogLevel("WARN") hiveCtx = HiveContext(sc) spark = SparkSession.builder.master("yarn").appName("MF_return_calc").config("spark.debug.maxToStringFields", "100").getOrCreate()  #执行SQL test_sql = """select * from dl_nccp.account limit 5""" res = hiveCtx.sql(test_sql) type(res) #返回spark dataframe res.head(3) res_pd = res.toPandas() #将spark dataframe转为pandas dataframe res_pd</code></pre> <p><img loading="lazy" decoding="async" alt="" height="665" src="http://img.555519.xyz/uploads/20221228/ed029127ed79ff279d7196947174d608.jpg"></p> <p><img loading="lazy" decoding="async" alt="" height="251" src="http://img.555519.xyz/uploads/20221228/b92e4ec433f6d85624ccad6958e62271.jpg"></p> <p>&nbsp;</p> <p>好了上面四种在python中访问hive和impala的方式就介绍完了，希望对大家有帮助，谢谢！</p> <p>希望本文对你有帮助，请点个赞鼓励一下作者吧~ 谢谢！</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-21837.htm">Java中线程状态+线程安全问题+synchronized的用法详解_java_</a></p>
                                        <p>下一个：<a href="/news/article-22291.htm">从线上环境摘取了四个代码优化记录分享给大家</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-9-node-share-links.htm" title="12月9日|22.2M/S，最新高速免费节点，Shadowrocket/Clash/V2ray/SSR订阅链接地址，科学上网">12月9日|22.2M/S，最新高速免费节点，Shadowrocket/Clash/V2ray/SSR订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-20915.htm" title="猫味道很大房屋内怎么去除（房间猫咪异味怎样彻底清除）">猫味道很大房屋内怎么去除（房间猫咪异味怎样彻底清除）</a></li>
                        <li class="py-2"><a href="/news/article-23206.htm" title="在打包vue项目时报错的问题解决">在打包vue项目时报错的问题解决</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-28-free-v2ray-subscribe.htm" title="2月28日|20.2M/S，最新高速免费节点，Shadowrocket/SSR/Clash/V2ray订阅链接地址，科学上网">2月28日|20.2M/S，最新高速免费节点，Shadowrocket/SSR/Clash/V2ray订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-51307.htm" title="南京领养猫咪要求（南京在哪领养猫）">南京领养猫咪要求（南京在哪领养猫）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-24-free-node-subscribe-links.htm" title="1月24日|20.5M/S，最新高速免费节点，Clash/V2ray/SSR/Shadowrocket订阅链接地址，科学上网">1月24日|20.5M/S，最新高速免费节点，Clash/V2ray/SSR/Shadowrocket订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-37847.htm" title="天津免费领养猫咪贴吧（天津领养猫猫）">天津免费领养猫咪贴吧（天津领养猫猫）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-19-free-v2ray-subscribe.htm" title="12月19日|22.6M/S，最新高速免费节点，V2ray/Clash/Shadowrocket/SSR订阅链接地址，科学上网">12月19日|22.6M/S，最新高速免费节点，V2ray/Clash/Shadowrocket/SSR订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-23207.htm" title="同安宠物猫店 同安宠物猫店地址">同安宠物猫店 同安宠物猫店地址</a></li>
                        <li class="py-2"><a href="/news/article-63747.htm" title="丹阳宠物领养（丹阳宠物救助站）">丹阳宠物领养（丹阳宠物救助站）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>V2rayNode节点分享站 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/website/js/frontend/v2raynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raynode/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/v2raynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>