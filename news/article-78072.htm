<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raynode.github.io/news/article-78072.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>mysql主从复制+读写分离+负载均衡</title>
    <link rel="icon" href="/assets/website/img/v2raynode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="文章目录  一、Linux安装MariaDB数据库   下载MariaDB数据库   1测试: 当前虚拟机是否可以正确的链接外网 2.安装步骤如下 3 数据库启动 4数据库初始化操作 5.测试数据库用" />
    
    <meta name="author" content="V2rayNode节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2raynode.github.io/news/article-78072.htm" />
    <meta property="og:site_name" content="V2rayNode节点分享站" />
    <meta property="og:title" content="mysql主从复制+读写分离+负载均衡" />
    <meta property="og:image" content="https://v2raynode.github.io/uploads/20240303/5dfb20b230f57c6f690bfab0c13ec0e8.webp" />
        <meta property="og:release_date" content="2025-03-21T10:28:21" />
    <meta property="og:updated_time" content="2025-03-21T10:28:21" />
        <meta property="og:description" content="文章目录  一、Linux安装MariaDB数据库   下载MariaDB数据库   1测试: 当前虚拟机是否可以正确的链接外网 2.安装步骤如下 3 数据库启动 4数据库初始化操作 5.测试数据库用" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="mysql主从复制+读写分离+负载均衡">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-KDKFWTWW0S"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-KDKFWTWW0S');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand d-flex align-items-center" href="/">
                                    <span>V2ray Node</span>
                                </a>

                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">mysql主从复制+读写分离+负载均衡</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li><a href="#LinuxMariaDB_2" rel="nofollow">一、Linux安装MariaDB数据库</a></li> <li> <ul> <li><a href="#MariaDB_3" rel="nofollow">下载MariaDB数据库</a></li> <li> <ul> <li><a href="#1__4" rel="nofollow">1测试: 当前虚拟机是否可以正确的链接外网</a></li> <li><a href="#2_6" rel="nofollow">2.安装步骤如下</a></li> <li><a href="#3__15" rel="nofollow">3 数据库启动</a></li> <li><a href="#4_24" rel="nofollow">4数据库初始化操作</a></li> <li><a href="#5_28" rel="nofollow">5.测试数据库用户名和密码是否有效</a></li> <li><a href="#6_30" rel="nofollow">6.导入数据表</a></li> <li><a href="#8Mysql_34" rel="nofollow">8.Mysql数据库远程访问配置</a></li> <li><a href="#81__36" rel="nofollow">8.1 关于链接数据库的说明</a></li> <li><a href="#82__40" rel="nofollow">8.2 配置数据库权限配置说明</a></li> <li><a href="#83_Linux_42" rel="nofollow">8.3 配置Linux数据库权限</a></li> <li> <ul> <li><a href="#831_mysql_43" rel="nofollow">8.3.1 切换数据库mysql</a></li> <li><a href="#832__49" rel="nofollow">8.3.2 修改数据库表</a></li> </ul> </li> </ul> </li> <li><a href="#9_Linux_62" rel="nofollow">9. 配置Linux防火墙策略</a></li> <li> <ul> <li><a href="#91__63" rel="nofollow">9.1 检查防火墙状态</a></li> <li><a href="#92__67" rel="nofollow">9.2 防火墙配置</a></li> <li><a href="#93__75" rel="nofollow">9.3 手动关闭防火墙</a></li> <li><a href="#94__82" rel="nofollow">9.4 手动开放防火墙端口</a></li> <li><a href="#94__118" rel="nofollow">9.4 数据库远程测试</a></li> <li><a href="#95_jtdbsql_122" rel="nofollow">9.5 导入jtdb.sql</a></li> </ul> </li> </ul> </li> <li><a href="#_125" rel="nofollow">二、数据库热备份（主从复制）</a></li> <li> <ul> <li><a href="#21_133" rel="nofollow">2.1准备多台服务器</a></li> <li> <ul> <li><a href="#221__134" rel="nofollow">2.2.1 修改虚拟机名称</a></li> <li><a href="#222_Linuxmac_137" rel="nofollow">2.2.2 修改Linux从机的mac地址</a></li> <li><a href="#223_140" rel="nofollow">2.2.3安装数据库从库</a></li> </ul> </li> <li><a href="#22_142" rel="nofollow">2.2数据库主从搭建</a></li> <li> <ul> <li><a href="#231__143" rel="nofollow">2.3.1 开启主库二进制文件</a></li> <li><a href="#232__151" rel="nofollow">2.3.2 开启从库二进制配置文件</a></li> <li><a href="#233__156" rel="nofollow">2.3.3 数据库主从搭建</a></li> <li><a href="#234__183" rel="nofollow">2.3.4 数据库主从测试</a></li> </ul> </li> <li><a href="#24__190" rel="nofollow">2.4 数据库读写分离/负载均衡实现</a></li> <li> <ul> <li><a href="#241__191" rel="nofollow">2.4.1 数据库优化策略</a></li> <li><a href="#242_Mycat_194" rel="nofollow">2.4.2 Mycat</a></li> </ul> </li> <li><a href="#25__195" rel="nofollow">2.5 部署步骤</a></li> <li> <ul> <li><a href="#251_myCat_196" rel="nofollow">2.5.1 上传myCat服务器</a></li> <li><a href="#252_Mycat_198" rel="nofollow">2.5.2 解压Mycat</a></li> <li><a href="#253_serverxml_204" rel="nofollow">2.5.3 server.xml配置文件说明</a></li> <li><a href="#254_schemaxml_221" rel="nofollow">2.5.4 schema.xml配置</a></li> <li><a href="#254__273" rel="nofollow">2.5.4 实现配置文件上传</a></li> <li><a href="#255_Mycat_275" rel="nofollow">2.5.5 Mycat命令</a></li> <li><a href="#256_mycat_278" rel="nofollow">2.5.6 检查mycat日志</a></li> <li><a href="#257_Mycat_280" rel="nofollow">2.5.7 Mycat负载均衡测试</a></li> </ul> </li> <li><a href="#_284" rel="nofollow">三、实现数据库高可用</a></li> <li><a href="#11__286" rel="nofollow">1.1 搭建策略</a></li> <li> <ul> <li><a href="#111__287" rel="nofollow">1.1.1 问题说明</a></li> <li><a href="#112__292" rel="nofollow">1.1.2 双机热备(双主模式)</a></li> <li><a href="#113__298" rel="nofollow">1.1.3 双机热备的实现</a></li> </ul> </li> <li><a href="#12__309" rel="nofollow">1.2 数据库高可用实现</a></li> <li><a href="#13__370" rel="nofollow">1.3 数据库高可用实测试</a></li> <li><a href="#14__380" rel="nofollow">1.4 检查端口占用情况</a></li> </ul> </li> <li><a href="#_383" rel="nofollow">总结</a></li> </ul> </div> </h1> <h2><a id="MariaDB_3" rel="nofollow"></a>下载MariaDB数据库</h2> <h3><a id="1__4" rel="nofollow"></a>1测试: 当前虚拟机是否可以正确的链接外网</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/c10d80762a4d1e49b3241620dc1631b1.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="2_6" rel="nofollow"></a>2.安装步骤如下</h3> <pre><code class="prism language-java"><span class="token punctuation">[</span>root<span class="token annotation punctuation">@localhost</span> src<span class="token punctuation">]</span># yum  install mariadb<span class="token operator">-</span>server      安装mariadb数据库<span class="token punctuation">[</span>root<span class="token annotation punctuation">@localhost</span> src<span class="token punctuation">]</span># yum  clean   all                 清空已安装文件   如果下载失败之后执行的<span class="token punctuation">.</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/37c2bca7d3b6f7af85b9ac543ce29081.jpg" alt=" mysql主从复制+读写分离+负载均衡">确认下载<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/6bc0aca820419e706dc39e0c20c003e6.jpg" alt=" mysql主从复制+读写分离+负载均衡">安装完成提示</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/97437b615dc904aa3e4cf347f80f1a0c.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="3__15" rel="nofollow"></a>3 数据库启动</h3> <p>命令:</p> <pre><code>1.   启动命令    [root@localhost src]# systemctl  start  mariadb 2.   重启命令    [root@localhost src]# systemctl  restart  mariadb 3.   关闭命令    [root@localhost src]# systemctl  stop  mariadb 4.   设定开机自起 [root@localhost src]# systemctl  enable mariadb  5.   关闭开机自起 [root@localhost src]# systemctl  disable mariadb</code></pre> <h3><a id="4_24" rel="nofollow"></a>4数据库初始化操作</h3> <p>命令: `mysql_secure_installation’<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/19a1825daba14057f3972ed91279bed5.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="5_28" rel="nofollow"></a>5.测试数据库用户名和密码是否有效</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/7769d2ee6edfbeb0196efc1d8aa8fa00.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="6_30" rel="nofollow"></a>6.导入数据表</h3> <p>说明:如果mysql数据库需要导入数据表命令如下:<br /> 命令: source /xxx/xxxx/xxxx/jtdb.sql;<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/4b97ff7e53454c94f33eba78a73933c1.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="8Mysql_34" rel="nofollow"></a>8.Mysql数据库远程访问配置</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/9484a779358037db5f8a3e70b1c612a4.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="81__36" rel="nofollow"></a>8.1 关于链接数据库的说明</h3> <p>说明:</p> <ol> <li>如果需要远程链接数据库必须通过防火墙</li> <li>如果远程链接数据库,数据库中必须开启远程访问权限才行,否则拒绝链接.</li> </ol> <h3><a id="82__40" rel="nofollow"></a>8.2 配置数据库权限配置说明</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/43f6eb9cd6cc584261746e27b371235d.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="83_Linux_42" rel="nofollow"></a>8.3 配置Linux数据库权限</h3> <h4><a id="831_mysql_43" rel="nofollow"></a>8.3.1 切换数据库mysql</h4> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/adb2246687c0a163a63d84a9b6ade169.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /> 切换Mysql数据库<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/98451fd548d51cad36938fe310b0b5de.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h4><a id="832__49" rel="nofollow"></a>8.3.2 修改数据库表</h4> <p>1).检查数据表<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/20586539033f2a65f129026bc08b0de4.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <p>2).查询user表中的host/root/password<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/4c3bae547f4445d77a90512b64e09000.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <p>3).将host=“localhost” 改为 “%”<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/da8ba3142d3cefa35d44df555c9f5bad.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /> 4).刷新数据库权限<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/d3964b66d0238ba31a91b6fde588902b.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h2><a id="9_Linux_62" rel="nofollow"></a>9. 配置Linux防火墙策略</h2> <h3><a id="91__63" rel="nofollow"></a>9.1 检查防火墙状态</h3> <p>命令: firewall-cmd --state<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/d6ba597667923e3270692c17a8ebd207.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="92__67" rel="nofollow"></a>9.2 防火墙配置</h3> <p>说明:防火墙中有一个配置文件,表示当Linux系统启动时防火墙应该如何操作!!!<br /> 需求: 告诉linux系统以后开机不需要启动防火墙<br /> 命令: systemctl disable firewalld.service<br /> systemctl enable firewalld.service<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/13613e45862b371e56cab5b2a4ab7a04.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="93__75" rel="nofollow"></a>9.3 手动关闭防火墙</h3> <p>说明:通过命令手动将防火墙关闭<br /> 命令:</p> <ol> <li>systemctl stop firewalld.service</li> <li>systemctl start firewalld.service<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/8719d9f91e40a8f115b0aad6a7921635.jpg" alt=" mysql主从复制+读写分离+负载均衡"></li> </ol> <h3><a id="94__82" rel="nofollow"></a>9.4 手动开放防火墙端口</h3> <p>1). 检查防火墙开放的端口</p> <pre><code class="prism language-java">firewall<span class="token operator">-</span>cmd<span class="token operator">--</span>list<span class="token operator">-</span>ports</code></pre> <p>2).检查端口是否开放</p> <pre><code class="prism language-java">firewall<span class="token operator">-</span>cmd<span class="token operator">--</span>query<span class="token operator">-</span>port<span class="token number">80</span><span class="token operator">/</span>tcp</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/4d07265ee5ad1a167d469b8b87d108db.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <p>3). 开启防火墙</p> <pre><code class="prism language-java">firewall<span class="token operator">-</span>cmd<span class="token operator">--</span>zone<span class="token operator">=</span><span class="token keyword">public</span><span class="token operator">--</span>add<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">80</span><span class="token operator">/</span>tcp<span class="token operator">--</span>permanent</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/09f5d8f375b750cb885580f8c7da8312.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /> 4).移除端口</p> <p>firewall-cmd --zone=public --remove-port=9090/tcp --permanent</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/59c708c0b94a518159436b952f549cd6.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /> 5).关于防火墙操作的解释<br /> –zone #作用域</p> <p>–add-port=80/tcp #添加端口，格式为：端口/通讯协议</p> <p>–remove-port=80/tcp #移除端口，格式为：端口/通讯协议</p> <p>–permanent #永久生效，没有此参数重启后失效</p> <p>6).重启防火墙</p> <p>firewall-cmd --reload</p> <h3><a id="94__118" rel="nofollow"></a>9.4 数据库远程测试</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/870fd0cd1e01beaf86674912a37b052f.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="95_jtdbsql_122" rel="nofollow"></a>9.5 导入jtdb.sql</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/1e9a86cc0a275bdc9075a72f8daef9b6.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> </h1> <p>说明:可以通过数据库机制,自动的实现数据的备份操作.<br /> 优点: 可以实现自动化的操作,并且是实时备份.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/74d5d49dc8de4ed99cfaa908e00b5b06.jpg" alt=" mysql主从复制+读写分离+负载均衡">备份实现原理:<br /> 1.当数据库主机的数据发现变化时,会将修改的数据写入二进制日志文件中.<br /> 2.从库通过IO线程,读取主库的二进制日志文件,获取之后,将数据保存到中继(临时存储)日志中.<br /> 3.从库中开启Sql线程,之后读取中继日志中的数据,之后将数据同步到从库中.</p> <h2><a id="21_133" rel="nofollow"></a>2.1准备多台服务器</h2> <h3><a id="221__134" rel="nofollow"></a>2.2.1 修改虚拟机名称</h3> <p>说明:复制的虚拟机,并且改名为JT_LINUX_S.之后启动即可.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/08974f52de891c3205573decfdfa1863.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="222_Linuxmac_137" rel="nofollow"></a>2.2.2 修改Linux从机的mac地址</h3> <p>为了保证2台虚拟机正常稳定的运行,需要修改mac地址.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/898962602426dc24786a9b3064b37dde.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="223_140" rel="nofollow"></a>2.2.3安装数据库从库</h3> <p>https://blog.csdn.net/qq_16804847/article/details/108450506</p> <h2><a id="22_142" rel="nofollow"></a>2.2数据库主从搭建</h2> <h3><a id="231__143" rel="nofollow"></a>2.3.1 开启主库二进制文件</h3> <p>说明:主库的二进制日志文件,默认条件下是关闭的,需要手动的开启.<br /> 命令: vim /etc/my.cnf<br /> 编辑二进制日志文件:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/cbe9523eb6f959e40dd9bec1b0c28b9f.jpg" alt=" mysql主从复制+读写分离+负载均衡">重启数据库,检查二进制日志文件,是否可用.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/b2ec268e049d5b3180c23865c2ca50ce.jpg" alt=" mysql主从复制+读写分离+负载均衡">重启之后,生成二进制文件<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/82d5b4ed875d6b0415a8b3633208df3d.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="232__151" rel="nofollow"></a>2.3.2 开启从库二进制配置文件</h3> <p>修改文件: vim /etc/my.cnf<br /> 添加的操作和主库一致,之后重启数据库服务器,效果如下:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/cf4b9694539fa5a352bd31c7f62246f5.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="233__156" rel="nofollow"></a>2.3.3 数据库主从搭建</h3> <p>1).检查主库的状态<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/01cfb4165a15353ff5b6008ed6b2b214.jpg" alt=" mysql主从复制+读写分离+负载均衡">2). 实现数据库主从挂载</p> <pre><code class="prism language-sql"><span class="token comment">/*我是130 我是从库*/</span><span class="token comment">/*1.实现数据库主从挂载 host/port/user/password/二进制日志/pos*/</span> CHANGE MASTER<span class="token keyword">TO</span> MASTER_HOST<span class="token operator">=</span><span class="token string">"192.168.126.129"</span><span class="token punctuation">,</span> MASTER_PORT<span class="token operator">=</span><span class="token number">3306</span><span class="token punctuation">,</span> MASTER_USER<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">,</span> MASTER_PASSWORD<span class="token operator">=</span><span class="token string">"root"</span><span class="token punctuation">,</span> MASTER_LOG_FILE<span class="token operator">=</span><span class="token string">"mysql-bin.000001"</span><span class="token punctuation">,</span> MASTER_LOG_POS<span class="token operator">=</span><span class="token number">245</span><span class="token punctuation">;</span><span class="token comment">/*2.启动数据库主从服务*/</span><span class="token keyword">START</span> SLAVE<span class="token punctuation">;</span><span class="token comment">/*3.检查数据库启动状态*/</span><span class="token keyword">SHOW</span> SLAVE<span class="token keyword">STATUS</span><span class="token punctuation">;</span><span class="token comment">/*4.如果出现数据库问题  1.关闭主从服务, 2.检查报错状态  3.重新搭建服务*/</span> STOP SLAVE<span class="token comment">/*检查报错信息 根据报错修改记录*/</span><span class="token comment">/*重新搭建主从关系*/</span></code></pre> <p>3).主从状态的校验<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/503f4afd3f814a86df611961b7882cb4.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="234__183" rel="nofollow"></a>2.3.4 数据库主从测试</h3> <p>注意事项:<br /> 1.修改主库的数据,从库会跟着同步数据.<br /> 2.如果修改从库数据,则主从的关系将会终止</p> <h2><a id="24__190" rel="nofollow"></a>2.4 数据库读写分离/负载均衡实现</h2> <h3><a id="241__191" rel="nofollow"></a>2.4.1 数据库优化策略</h3> <p>说明:通过代理数据库可以实现数据库的读写分离/数据库负载均衡操作,进一步的提升了整体架构的能力.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/11243dadef0ac4b8598bb1c2552a01c3.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="242_Mycat_194" rel="nofollow"></a>2.4.2 Mycat</h3> <h2><a id="25__195" rel="nofollow"></a>2.5 部署步骤</h2> <h3><a id="251_myCat_196" rel="nofollow"></a>2.5.1 上传myCat服务器</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/6b83bb222f02bae64fd9782629339b04.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="252_Mycat_198" rel="nofollow"></a>2.5.2 解压Mycat</h3> <pre><code class="prism language-sql"> tar<span class="token operator">-</span>xvf  Mycat<span class="token operator">-</span>server<span class="token operator">-</span><span class="token number">1.7</span><span class="token number">.0</span><span class="token operator">-</span>DEV<span class="token operator">-</span><span class="token number">20170416134921</span><span class="token operator">-</span>linux<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz</code></pre> <p>移动安装文件:<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/9586790630e60129071d134a04901a99.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="253_serverxml_204" rel="nofollow"></a>2.5.3 server.xml配置文件说明</h3> <p>注意事项: 默认条件下的端口号8066端口</p> <pre><code class="prism language-sql"><span class="token operator">&lt;</span><span class="token keyword">user</span> name<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">&gt;</span>root<span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--与schema.xml中的配置相同 注意数据库的大小写--&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"schemas"</span><span class="token operator">&gt;</span>jtdb<span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">user</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token keyword">user</span> name<span class="token operator">=</span><span class="token string">"user"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">&gt;</span><span class="token keyword">user</span><span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"schemas"</span><span class="token operator">&gt;</span>jtdb<span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span><span class="token operator">&lt;</span>property name<span class="token operator">=</span><span class="token string">"readOnly"</span><span class="token operator">&gt;</span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">user</span><span class="token operator">&gt;</span></code></pre> <h3><a id="254_schemaxml_221" rel="nofollow"></a>2.5.4 schema.xml配置</h3> <pre><code class="prism language-sql"><span class="token operator">&lt;</span>?xml version<span class="token operator">=</span><span class="token string">"1.0"</span>?<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mycat:<span class="token keyword">schema</span> SYSTEM<span class="token string">"schema.dtd"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>mycat:<span class="token keyword">schema</span> xmlns:mycat<span class="token operator">=</span><span class="token string">"http://io.mycat/"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--name属性是自定义的  dataNode表示数据库的节点信息  jtdb表示逻辑库--&gt;</span><span class="token operator">&lt;</span><span class="token keyword">schema</span> name<span class="token operator">=</span><span class="token string">"jtdb"</span> checkSQLschema<span class="token operator">=</span><span class="token string">"false"</span> sqlMaxLimit<span class="token operator">=</span><span class="token string">"100"</span> dataNode<span class="token operator">=</span><span class="token string">"jtdb"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--定义节点名称/节点主机/数据名称--&gt;</span><span class="token operator">&lt;</span>dataNode name<span class="token operator">=</span><span class="token string">"jtdb"</span> dataHost<span class="token operator">=</span><span class="token string">"localhost1"</span><span class="token keyword">database</span><span class="token operator">=</span><span class="token string">"jtdb"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--参数介绍 UTF-8 中文报错--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--balance 0表示所有的读操作都会发往writeHost主机 --&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--1表示所有的读操作发往readHost和闲置的主节点中--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--writeType=0 所有的写操作都发往第一个writeHost主机--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--writeType=1 所有的写操作随机发往writeHost中--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--dbType 表示数据库类型 mysql/oracle--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--dbDriver="native"  固定参数 不变--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--switchType=-1 表示不自动切换, 主机宕机后不会自动切换从节点--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--switchType=1  表示会自动切换(默认值)如果第一个主节点宕机后,Mycat会进行3次心跳检测,如果3次都没有响应,则会自动切换到第二个主节点--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--并且会更新/conf/dnindex.properties文件的主节点信息 localhost1=0 表示第一个节点.该文件不要随意修改否则会出现大问题--&gt;</span><span class="token operator">&lt;</span>dataHost name<span class="token operator">=</span><span class="token string">"localhost1"</span> maxCon<span class="token operator">=</span><span class="token string">"1000"</span> minCon<span class="token operator">=</span><span class="token string">"10"</span> balance<span class="token operator">=</span><span class="token string">"1"</span> 			  writeType<span class="token operator">=</span><span class="token string">"0"</span> dbType<span class="token operator">=</span><span class="token string">"mysql"</span> dbDriver<span class="token operator">=</span><span class="token string">"native"</span> switchType<span class="token operator">=</span><span class="token string">"1"</span>  slaveThreshold<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>heartbeat<span class="token operator">&gt;</span><span class="token keyword">select</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>heartbeat<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--配置第一台主机主要进行写库操作,在默认的条件下Mycat主要操作第一台主机在第一台主机中已经实现了读写分离.因为默认写操作会发往137的数据库.读的操作默认发往141.如果从节点比较忙,则主节点分担部分压力.</span><span class="token comment">--&gt;</span><span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"hostM1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--读数据库1--&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.130:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--读数据库2--&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS2"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>writeHost<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--定义第二台主机 由于数据库内部已经实现了双机热备.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--Mycat实现高可用.当第一个主机137宕机后.mycat会自动发出心跳检测.检测3次.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--如果主机137没有给Mycat响应则判断主机死亡.则回启东第二台主机继续为用户提供服务.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--如果137主机恢复之后则处于等待状态.如果141宕机则137再次持续为用户提供服务.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--前提:实现双机热备.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--&lt;writeHost host="hostM2" url="192.168.126.130:3306" user="root" password="root"&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.130:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS2"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>writeHost<span class="token operator">&gt;</span><span class="token comment">--&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dataHost<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mycat:<span class="token keyword">schema</span><span class="token operator">&gt;</span></code></pre> <h3><a id="254__273" rel="nofollow"></a>2.5.4 实现配置文件上传</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/ae52f8977e019dab933dfa9a825fa886.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="255_Mycat_275" rel="nofollow"></a>2.5.5 Mycat命令</h3> <p>Usage: ./mycat { console | start | stop | restart | status | dump }<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/e23767398added9379aca58e437dc75e.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="256_mycat_278" rel="nofollow"></a>2.5.6 检查mycat日志</h3> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/d101d2223a51d4bc25129bee5e4d2416.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="257_Mycat_280" rel="nofollow"></a>2.5.7 Mycat负载均衡测试</h3> <p>修改从库中的数据库.刷新列表页面.检查是否有负载均衡的效果.<br /> 注意事项: 如果测试完成,记得将数据修改 保证一致.</p> <h2><a id="_284" rel="nofollow"></a>三、实现数据库高可用</h2> <h2><a id="11__286" rel="nofollow"></a>1.1 搭建策略</h2> <h3><a id="111__287" rel="nofollow"></a>1.1.1 问题说明</h3> <p>说明:如果根据如下的配置实现数据库的代理,如果数据库主库宕机,则直接影响整个程序的执行.所以需要实现高可用机制.<br /> 高可用实现的问题:<br /> 如果实现了数据库高可用,可以自动的切换数据库,由于用户直接操作了从库,当主库启动时发现数据不一致时,主从同步的状态将会终止.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/3294767c62fe13b4d7b30c28a5145c18.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="112__292" rel="nofollow"></a>1.1.2 双机热备(双主模式)</h3> <p>说明:可以通过数据库双主模式实现数据库高可用.<br /> 双主模式实质都是主机,互相备份.</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/1f1360454a46e2f824948e8dc4af8ac2.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h3><a id="113__298" rel="nofollow"></a>1.1.3 双机热备的实现</h3> <p>之前的配置:<br /> 主机: 192.168.126.129<br /> 从库: 192.168.126.130<br /> 现在的配置:<br /> 主机: 192.168.126.130<br /> 从库: 192.168.126.129<br /> 1).检查主库状态<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/5e86782ce8dbd711efbf441d9008c3cf.jpg" alt=" mysql主从复制+读写分离+负载均衡">2).实现数据库主从搭建<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/b7d44878154ba7aaa4a710ae43845497.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h2><a id="12__309" rel="nofollow"></a>1.2 数据库高可用实现</h2> <p>1).编辑配置文件</p> <pre><code class="prism language-sql"><span class="token operator">&lt;</span>?xml version<span class="token operator">=</span><span class="token string">"1.0"</span>?<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE mycat:<span class="token keyword">schema</span> SYSTEM<span class="token string">"schema.dtd"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>mycat:<span class="token keyword">schema</span> xmlns:mycat<span class="token operator">=</span><span class="token string">"http://io.mycat/"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--name属性是自定义的  dataNode表示数据库的节点信息  jtdb表示逻辑库--&gt;</span><span class="token operator">&lt;</span><span class="token keyword">schema</span> name<span class="token operator">=</span><span class="token string">"jtdb"</span> checkSQLschema<span class="token operator">=</span><span class="token string">"false"</span> sqlMaxLimit<span class="token operator">=</span><span class="token string">"100"</span> dataNode<span class="token operator">=</span><span class="token string">"jtdb"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--定义节点名称/节点主机/数据名称--&gt;</span><span class="token operator">&lt;</span>dataNode name<span class="token operator">=</span><span class="token string">"jtdb"</span> dataHost<span class="token operator">=</span><span class="token string">"localhost1"</span><span class="token keyword">database</span><span class="token operator">=</span><span class="token string">"jtdb"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--参数介绍 UTF-8 中文报错--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--balance 0表示所有的读操作都会发往writeHost主机 --&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--1表示所有的读操作发往readHost和闲置的主节点中--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--writeType=0 所有的写操作都发往第一个writeHost主机--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--writeType=1 所有的写操作随机发往writeHost中--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--dbType 表示数据库类型 mysql/oracle--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--dbDriver="native"  固定参数 不变--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--switchType=-1 表示不自动切换, 主机宕机后不会自动切换从节点--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--switchType=1  表示会自动切换(默认值)如果第一个主节点宕机后,Mycat会进行3次心跳检测,如果3次都没有响应,则会自动切换到第二个主节点--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--并且会更新/conf/dnindex.properties文件的主节点信息 localhost1=0 表示第一个节点.该文件不要随意修改否则会出现大问题--&gt;</span><span class="token operator">&lt;</span>dataHost name<span class="token operator">=</span><span class="token string">"localhost1"</span> maxCon<span class="token operator">=</span><span class="token string">"1000"</span> minCon<span class="token operator">=</span><span class="token string">"10"</span> balance<span class="token operator">=</span><span class="token string">"1"</span> 			  writeType<span class="token operator">=</span><span class="token string">"0"</span> dbType<span class="token operator">=</span><span class="token string">"mysql"</span> dbDriver<span class="token operator">=</span><span class="token string">"native"</span> switchType<span class="token operator">=</span><span class="token string">"1"</span>  slaveThreshold<span class="token operator">=</span><span class="token string">"100"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>heartbeat<span class="token operator">&gt;</span><span class="token keyword">select</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>heartbeat<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--配置第一台主机主要进行写库操作,在默认的条件下Mycat主要操作第一台主机在第一台主机中已经实现了读写分离.因为默认写操作会发往137的数据库.读的操作默认发往141.如果从节点比较忙,则主节点分担部分压力.</span><span class="token comment">--&gt;</span><span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"hostM1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--读数据库1--&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.130:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--读数据库2--&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS2"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>writeHost<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--定义第二台主机 由于数据库内部已经实现了双机热备.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--Mycat实现高可用.当第一个主机137宕机后.mycat会自动发出心跳检测.检测3次.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--如果主机137没有给Mycat响应则判断主机死亡.则回启东第二台主机继续为用户提供服务.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--如果137主机恢复之后则处于等待状态.如果141宕机则137再次持续为用户提供服务.--&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token comment">--前提:实现双机热备.--&gt;</span><span class="token operator">&lt;</span>writeHost host<span class="token operator">=</span><span class="token string">"hostM2"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.130:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS1"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.130:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>readHost host<span class="token operator">=</span><span class="token string">"hostS2"</span> url<span class="token operator">=</span><span class="token string">"192.168.126.129:3306"</span><span class="token keyword">user</span><span class="token operator">=</span><span class="token string">"root"</span> password<span class="token operator">=</span><span class="token string">"root"</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>writeHost<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>dataHost<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>mycat:<span class="token keyword">schema</span><span class="token operator">&gt;</span></code></pre> <p>2).上传配置文件:</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/e7d9ad236c404a58ef59123ee640cb4d.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /> 3).重启mycat服务器</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/f4a5561f7c059fb3133089d2779aedc0.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h2><a id="13__370" rel="nofollow"></a>1.3 数据库高可用实测试</h2> <p>1.启动服务器,测试mysql数据库是否正常.<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/be742ec3d680958752f751fd15cfc020.jpg" alt=" mysql主从复制+读写分离+负载均衡">2.关闭数据库主库,再次检查用户的操作是否正常.</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/66e6a8866d6c43bfd221f85cec30f325.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/d309b5baab91958a0dbb18574e91559a.jpg" alt=" mysql主从复制+读写分离+负载均衡">3).修改数据库中的内容,重启主数据库,检查数据是否同步</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/6bd6dc9e738b6e9cb84d47656e1b06b9.jpg" alt=" mysql主从复制+读写分离+负载均衡"><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/2b77559c23aff81a5645ef5a11bbb3ca.jpg" alt=" mysql主从复制+读写分离+负载均衡"><br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/7225992350111814e6d72dc293f47efa.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> <h2><a id="14__380" rel="nofollow"></a>1.4 检查端口占用情况</h2> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220823/e663b8efad110fc3a4f6ad234906fd73.jpg" alt=" mysql主从复制+读写分离+负载均衡"></p> </h1> <p>sharding-proxy同mycat原理一样，具体可参考https://blog.csdn.net/weixin_44594263/article/details/112647299进行配置</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-77382.htm">孕妇被猫抓出血没***没事吧（孕妇被猫抓了出血了怎么办）</a></p>
                                        <p>下一个：<a href="/news/article-78073.htm">Java Arrays工具类的使用</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-60757.htm" title="附近哪里可以领养狗狗狗（附近哪里可以领养狗狗狗的地方）">附近哪里可以领养狗狗狗（附近哪里可以领养狗狗狗的地方）</a></li>
                        <li class="py-2"><a href="/news/article-45771.htm" title="动物防疫站干嘛的（动物防疫站干嘛的呀）">动物防疫站干嘛的（动物防疫站干嘛的呀）</a></li>
                        <li class="py-2"><a href="/news/article-44780.htm" title="梦到抱别的女人什么意思周公解梦梦见蛇（梦见抱别人女人是什么）">梦到抱别的女人什么意思周公解梦梦见蛇（梦见抱别人女人是什么）</a></li>
                        <li class="py-2"><a href="/news/article-64976.htm" title="软件模块之间耦合度的强弱排序">软件模块之间耦合度的强弱排序</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-22-shadowrocket-node.htm" title="2月22日|18.2M/S，最新高速免费节点，Clash/V2ray/Shadowrocket/SSR订阅链接地址，科学上网">2月22日|18.2M/S，最新高速免费节点，Clash/V2ray/Shadowrocket/SSR订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-44288.htm" title="动物疫苗产业链分析图（动物疫苗行业龙头）">动物疫苗产业链分析图（动物疫苗行业龙头）</a></li>
                        <li class="py-2"><a href="/news/article-39819.htm" title="成都宠物运输快递公司（成都宠物运输快递公司有哪些）">成都宠物运输快递公司（成都宠物运输快递公司有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-4-clash-node-daily-updates.htm" title="2月4日|20M/S，最新高速免费节点，Shadowrocket/V2ray/SSR/Clash订阅链接地址，科学上网">2月4日|20M/S，最新高速免费节点，Shadowrocket/V2ray/SSR/Clash订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-free-node-subscribe.htm" title="2月12日|22.3M/S，最新高速免费节点，Shadowrocket/V2ray/Clash/SSR订阅链接地址，科学上网">2月12日|22.3M/S，最新高速免费节点，Shadowrocket/V2ray/Clash/SSR订阅链接地址，科学上网</a></li>
                        <li class="py-2"><a href="/news/article-55071.htm" title="附近美容院美容店在哪浮桥（附近美容门店）">附近美容院美容店在哪浮桥（附近美容门店）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">69</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>V2rayNode节点分享站 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/website/js/frontend/v2raynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raynode/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/v2raynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>